use core::ffi::c_uint;

pub const PROS_ERR_BYTE: u8 = u8::MAX;
pub const PROS_ERR_2_BYTE: u16 = u16::MAX;
pub const PROS_ERR: i32 = i32::MAX;
pub const PROS_ERR_F: f32 = f32::INFINITY;
pub const PROS_SUCCESS: c_uint = 1;

pub const EPERM: c_uint = 1;
pub const ENOENT: c_uint = 2;
pub const ESRCH: c_uint = 3;
pub const EINTR: c_uint = 4;
pub const EIO: c_uint = 5;
pub const ENXIO: c_uint = 6;
pub const E2BIG: c_uint = 7;
pub const ENOEXEC: c_uint = 8;
pub const EBADF: c_uint = 9;
pub const ECHILD: c_uint = 10;
pub const EAGAIN: c_uint = 11;
pub const ENOMEM: c_uint = 12;
pub const EACCES: c_uint = 13;
pub const EFAULT: c_uint = 14;
pub const ENOTBLK: c_uint = 15;
pub const EBUSY: c_uint = 16;
pub const EEXIST: c_uint = 17;
pub const EXDEV: c_uint = 18;
pub const ENODEV: c_uint = 19;
pub const ENOTDIR: c_uint = 20;
pub const EISDIR: c_uint = 21;
pub const EINVAL: c_uint = 22;
pub const ENFILE: c_uint = 23;
pub const EMFILE: c_uint = 24;
pub const ENOTTY: c_uint = 25;
pub const ETXTBSY: c_uint = 26;
pub const EFBIG: c_uint = 27;
pub const ENOSPC: c_uint = 28;
pub const ESPIPE: c_uint = 29;
pub const EROFS: c_uint = 30;
pub const EMLINK: c_uint = 31;
pub const EPIPE: c_uint = 32;
pub const EDOM: c_uint = 33;
pub const ERANGE: c_uint = 34;
pub const EHOSTDOWN: c_uint = 112;
